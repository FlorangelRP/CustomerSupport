@using CustomerSupport.Models
@model CustomerSupport.Models.MPerson

@{
    ViewBag.Title = "Crear Empleado";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card card-primary">
    <div class="card-header">
        <h3 class="card-title">@ViewBag.Title</h3>
    </div>
    <div class="card-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
         
            <div class="m-0 row justify-content-center">
                <div class="form-horizontal col-md-10">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="row">
                        <div class="col-md-2">
                            <div class="form-group">
                                <div class="control-label">Codigo:</div>
                                @Html.TextBoxFor(model => model.IdPerson, new { @class = "form-control", @disabled = "disabled" })
                                @Html.ValidationMessageFor(model => model.IdPerson, "", new { @class = "text-danger" })

                                @Html.HiddenFor(model => model.IdPersonType, new { @class = "form-control" })
                                @Html.HiddenFor(model => model.IdContactType, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <hr>

                    <div class="row">
                        <div id="divPosition" class="col-md-4">
                            <div class="form-group">
                                <div class="control-label">Cargo:</div>
                                <select id="lst_Position" class="form-control select2" style="width: 100%;">
                                </select>
                                @Html.ValidationMessageFor(model => model.IdPosition, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.IdPosition, new { @id = "inpIdPosition" })
                            </div>
                        </div>
                        <div id="divClientPermission" class="col-md-3">
                            <div class="form-group s_status">
                                <label>
                                    Permitir ver como cliente
                                    @Html.CheckBoxFor(model => model.ClientPermission, new { @class = "form-control" })
                                    <span class="s_st_checkbox"></span>
                                </label>
                                @Html.ValidationMessageFor(model => model.ClientPermission, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-3">
                            <div class="form-group">
                                <div class="control-label">Tipo de Identificacion:</div>
                                <select id="lst_IdentificationType" class="form-control select2" style="width: 100%;">
                                </select>
                                @Html.ValidationMessageFor(model => model.IdIdentificationType, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.IdIdentificationType, new { @id = "inpIdIdentificationType" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="control-label">Numero de Identificacion:</div>
                                @Html.TextBoxFor(model => model.NumIdentification, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.NumIdentification, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="control-label">Nombres:</div>
                                @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="control-label">Apellidos:</div>
                                @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <div class="control-label">Fecha de Nacimiento:</div>
                                @Html.TextBoxFor(model => model.Birthday, new { @class = "form-control", @type = "date" })
                                @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row pt-2 pb-3">

                        <div class="col-md-12">

                            <div class="accordion border" id="accordionContact">
                                <div class="card collapsed-card">
                                    <div class="card-header" id="headingContact">
                                        <h2 class="mb-0">
                                            <button class="btn btn-link text-decoration-none" type="button" data-toggle="collapse" data-target="#collapseCardContact" aria-expanded="false" aria-controls="collapseContact">
                                                Teléfonos de Contacto
                                            </button>
                                        </h2>
                                    </div>

                                    <div id="collapseCardContact" class="collapse" aria-labelledby="headingContact" data-parent="#accordionContact">

                                        <div class="card-body">

                                            <div class="row">
                                                <div class="col-md-3">
                                                    <div class="form-group">
                                                        <div class="control-label">Tipo:</div>
                                                        <select id="lst_PhoneNumberType" class="form-control select2" style="width: 100%;">
                                                        </select>
                                                    </div>
                                                </div>
                                                <div class="col-md-3">
                                                    <div class="form-group">
                                                        <div class="control-label">Código de Area:</div>
                                                        <select id="lst_CountryAreaCode" class="form-control select2" style="width: 100%;">
                                                        </select>
                                                    </div>
                                                </div>
                                                <div class="col-md-3">
                                                    <div class="form-group">
                                                        <div class="control-label">Número:</div>
                                                        <input class="form-control" type="text" id="inpPhoneNumber" />
                                                    </div>
                                                </div>
                                                <div class="col-md-3">
                                                    <div class="form-group">
                                                        @*<div class="btn_option"><a id="addRow"><i class="fas fa-plus"></i></a></div>*@
                                                        <div class="btn_option"><a onclick="addRow();"><i class="fas fa-plus"></i></a></div>
                                                    </div>
                                                </div>
                                            </div>
                                            <hr>
                                            <div class="row pt-3">
                                                <div class="col-md-12">
                                                    <div class="form-group">
                                                        <div class="table-responsive">
                                                            <div class="container">

                                                                <table id="TPersonContact" class="display table table-bordered table-striped">
                                                                    <thead>
                                                                        <tr>
                                                                            <td>Index</td>
                                                                            <td>Id Tipo telefono</td>
                                                                            <td>Tipo</td>
                                                                            <td>Codigo Pais</td>
                                                                            <td>Código Area</td>
                                                                            <td>Hidden Número</td>
                                                                            <td>Número</td>
                                                                            <td>Opciones</td>
                                                                        </tr>
                                                                    </thead>
                                                                    <tbody id="BodyPersonContact">
                                                                    </tbody>
                                                                </table>
                       
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>

                                    </div>
                                </div>
                            </div>

                        </div>

                    </div>

                    <div class="row">
                        <div class="col-md-10">
                            <div class="form-group">
                                <div class="control-label">Direccion:</div>
                                @Html.TextAreaFor(model => model.Address, new { @class = "form-control", @rows = 3, @cols = 10 })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-5">
                            <div class="form-group">
                                <div class="control-label">Email:</div>
                                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @type = "email", @placeholder = "usuario@email.com" })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-4">
                            <label class="control-label">Estatus:</label>
                            <div class="s_status">
                                <label>
                                    <span id="labEstatus"></span>
                                    @Html.CheckBoxFor(model => model.Status, new { @class = "form-control", @id = "chkStatus" })
                                    <span class="s_st_checkbox"></span>
                                </label>
                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-offset-2 col-md-10">
                            <div class="form-group">
                                <div class="text-center">
                                    @*<a href="location.href='@Url.Action("Create", "Employee")';return false;" class="white_btn">Grabar</a>*@
                                    <button class="white_btn" type="submit">Grabar</button>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

            </div>

        }

        <div>
            @Html.ActionLink("Regresar a la Lista", "ListEmployee")
        </div>

    </div>
</div>

@section Scripts {

    <script src="~/Content/assets/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="~/Content/assets/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/Content/assets/plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
    <script src="~/Content/assets/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
    <script src="~/Content/assets/plugins/datatables-buttons/js/dataTables.buttons.min.js"></script>
    <script src="~/Content/assets/plugins/datatables-buttons/js/buttons.bootstrap4.min.js"></script>
    <script src="~/Content/assets/plugins/datatables-buttons/js/buttons.html5.min.js"></script>
    <script src="~/Content/assets/plugins/datatables-buttons/js/buttons.print.min.js"></script>
    <script src="~/Content/assets/plugins/datatables-buttons/js/buttons.colVis.min.js"></script>
    <script src="~/Content/assets/plugins/datatables-buttons/js/buttons.colVis.min.js"></script>

    <script>

        var tabPersonContact = $('#TPersonContact').DataTable({
            'columns':
                [
                    { "name": "IdRow", "width": "10%" },
                    { "name": "IdPhoneNumberType", "width": "10%" },
                    { "name": "PhoneNumberType", "width": "10%" },
                    { "name": "IdIsoCountryCode", "width": "10%" },
                    { "name": "CountryAreaCode", "width": "10%" },
                    { "name": "hiddenPhoneNumber", "width": "10%" },
                    { "name": "PhoneNumber", "width": "10%" },
                    {
                        "name": "buttonDelete", render: function (data, type, row) {
                            if (data != null) {
                                return '<div class="btn_option pt-0"><a class="deleteRow"><i class="far fa-trash-alt"></i></a></div>';
                            }
                        }, "width": "10%"
                    }
                ],
            //"columnDefs": [
            //    { "targets": 0, "bVisible": false, "orderable": false },
            //    { "targets": 1, "bVisible": false, "orderable": false },
            //    { "targets": 3, "bVisible": false, "orderable": false },
            //    { "targets": 5, "bVisible": false, "orderable": false },
            //    ////{ "targets": 6, "className": "dt-center" }
            //    //{ "targets": 7, "className": 'dt-body-nowrap' }
            //],
            "className": "dt-center",
            "bAutoWidth": false,
            "bInfo": false,
            "language": {
                "sProcessing": "Procesando...",
                "sLengthMenu": "Mostrar _MENU_ registros",
                "sZeroRecords": "No se encontraron resultados",
                "sEmptyTable": "No existen Registros",
                "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                "sInfoPostFix": "",
                "sSearch": "Buscar:",
                "sUrl": "",
                "sInfoThousands": ",",
                "sLoadingRecords": "Cargando...",
                "oPaginate": {
                    "sFirst": "Primero",
                    "sLast": "Último",
                    "sNext": "Siguiente",
                    "sPrevious": "Anterior"
                },
                "oAria": {
                    "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                    "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                }
            }
        });

        $(document).ready(function () {

            // If the checkbox is checked, display the output text
            if ($("#chkStatus").checked == true) {
                $("#labEstatus").text("Activo");
            } else {
                $("#labEstatus").text("Inactivo");
            }

            $("#lst_Position").on('change', function () {
                var selectValue = $(this).val();
                $("#inpIdPosition").val(selectValue);
            });

            $("#lst_IdentificationType").on('change', function () {
                var selectValue = $(this).val();
                $("#inpIdIdentificationType").val(selectValue);
            });

            $("#chkStatus").on('click', function () {

                var IsSelected = $('#chkStatus').is(":checked");

                // If the checkbox is checked, display the output text
                if (IsSelected == true) {
                    $("#labEstatus").text("Activo");
                } else {
                    $("#labEstatus").text("Inactivo");
                }

            });

            $.ajax({
                type: "GET",
                url: '@Url.Action("GetTableCatalog", "TableCatalog")?idTable='+"POSITION",
                data: "{}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (msg) {

                    var option = $(document.createElement('option'));
                    option.text("Seleccione");
                    option.val("");
                    $("#lst_Position").append(option);

                    $(msg).each(function () {
                        var option = $(document.createElement('option'));
                        option.text(this.DetailDesc);
                        option.val(this.IdCatalogDetail); //Identity

                        $("#lst_Position").append(option);
                    });

                    document.getElementById('lst_Position').value = "";
                },
                error: function (msg) {
                    $("#error > span").text("Error al llenar lista de cargos");
                }

            });

            $.ajax({
                type: "GET",
                url: '@Url.Action("GetTableCatalog", "TableCatalog")?idTable=' +"IDENTIFICATIONTYPE",
                data: "{}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (msg) {

                    var option = $(document.createElement('option'));
                    option.text("Seleccione");
                    option.val("");
                    $("#lst_IdentificationType").append(option);

                    $(msg).each(function () {
                        var option = $(document.createElement('option'));

                        option.text(this.DetailDesc);
                        option.val(this.IdCatalogDetail); //Identity

                        $("#lst_IdentificationType").append(option);
                    });

                    document.getElementById('lst_IdentificationType').value = "";
                },
                error: function (msg) {
                    $("#error > span").text("Error al llenar lista de tipos de identificacion");
                }

            });

            $.ajax({
                type: "GET",
                url: '@Url.Action("GetTableCatalog", "TableCatalog")?idTable='+"PHONENUMBERTYPE",
                data: "{}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (msg) {

                    var option = $(document.createElement('option'));
                    option.text("Seleccione");
                    option.val("");
                    $("#lst_PhoneNumberType").append(option);

                    $(msg).each(function () {
                        var option = $(document.createElement('option'));
                        option.text(this.DetailDesc);
                        option.val(this.IdCatalogDetail); //Identity

                        $("#lst_PhoneNumberType").append(option);
                    });

                    document.getElementById('lst_PhoneNumberType').value = "";
                },
                error: function (msg) {
                    $("#error > span").text("Error al llenar lista de tipos de telefono contacto");
                }

            });

            $.ajax({
                type: "GET",
                url: '@Url.Action("GetListCountry", "Country")',
                data: "{}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (msg) {

                    var option = $(document.createElement('option'));
                    option.text("Seleccione");
                    option.val("");
                    $("#lst_CountryAreaCode").append(option);

                    $(msg).each(function () {
                        var option = $(document.createElement('option'));
                        option.text(this.CountryAreaCode);
                        option.val(this.IdIsoCountry); //Identity

                        $("#lst_CountryAreaCode").append(option);
                    });

                    document.getElementById('lst_CountryAreaCode').value = "";
                },
                error: function (msg) {
                    $("#error > span").text("Error al llenar lista de Paises");
                }

            });


            $('#TPersonContact').on('click', 'a.deleteRow', function () {
                var pageTable = $('#TPersonContact').DataTable();
                var tableRow = pageTable.row($(this).parents('tr'));
                pageTable.row(tableRow).remove().draw();
            });

        });


        function addRow() {

            @{ 
                Model.listPersonContact.Add(new MPersonContact());
            }

            //obtenemos los valores a insertar
            var strIdPhoneNumberType = $("#lst_PhoneNumberType").val();
            var strPhoneNumberType = $('select[id="lst_PhoneNumberType"] option:selected').text();
            var strIdIsoCountry = $("#lst_CountryAreaCode").val();
            var strCountryAreaCode = $('select[id="lst_CountryAreaCode"] option:selected').text();
            var strPhoneNumber = $("#inpPhoneNumber").val();

            //Si el numero a insertar ya existe lo elimina para luego volver a insertarlo y asi evitar duplicados
            var oldNode = tabPersonContact.$("td:contains('" + strPhoneNumber + "')").parent('tr');
            tabPersonContact.row(oldNode).remove();
            tabPersonContact.row(oldNode).invalidate();


            //debugger;
            if (strPhoneNumber != "" && strIdIsoCountry != "" && strIdPhoneNumberType != "") {


                //-------------------------

                var index = $("#BodyPersonContact").children("tr").length;
                alert(index);

                var col_indexCell = "<td style='display:none'><input name='listPersonContact.Index' type = 'hidden' value = '" + index + "' /></td > ";

                var col_IdPhoneNumberType = "<td><input id='listPersonContact_" + index + "' name = 'listPersonContact[" + index + "].IdPhoneNumberType' type='text' value='" + strIdPhoneNumberType + "' /></td> ";
                var colPhoneNumberType = "<td><input id='listPersonContact_" + index + "' name = 'listPersonContact[" + index + "].PhoneNumberType' type='text' value='" + strPhoneNumberType + "' /></td> ";
                var col_IdIsoCountry = "<td><input id='listPersonContact_" + index + "' name = 'listPersonContact[" + index + "].IdIsoCountry' type = 'text' value = '" + strIdIsoCountry + "' /></td> ";
                var colCountryAreaCode = "<td><input id='listPersonContact_" + index + "' name = 'listPersonContact[" + index + "].CountryAreaCode' type = 'text' value = '" + strCountryAreaCode + "' /></td> ";
                var col_PhoneNumber = "<td><input id='listPersonContact_" + index + "' name = 'listPersonContact[" + index + "].PhoneNumber' type = 'text' value = '" + strPhoneNumber + "' /></td> ";
                var colPhoneNumber = "<td><input id='listPersonContact_" + index + "' name = 'listPersonContact[" + index + "].PhoneNumber' type = 'text' value = '" + strPhoneNumber + "' /></td> ";
                var colDelete = "<td><div class='btn_option pt-0'><a class='deleteRow'><i class='far fa-trash-alt'></i></a></div></td> ";


                //var newRow = "<tr id='trContact" + index + "'>" + col_indexCell + col_IdContact + col_IdPerson + col_IdPhoneNumberType + col_IdIsoCountry + col_PhoneNumber + col_Status + "</tr>";
                //$("#TListContact").append(newRow);

                //--------------------------


                //insertamos los valores en la tabla
                tabPersonContact.row.add([
                    col_indexCell,
                    col_IdPhoneNumberType, //strIdPhoneNumberType,
                    colPhoneNumberType,
                    col_IdIsoCountry, //strIdIsoCountry,
                    colCountryAreaCode,
                    col_PhoneNumber, //strPhoneNumber,
                    colPhoneNumber,
                    colDelete
                ]).draw(false);

                //limpiamos los valores ya agregados
                document.getElementById('lst_PhoneNumberType').value = "";
                document.getElementById('lst_CountryAreaCode').value = "";
                document.getElementById('inpPhoneNumber').value = "";
            }

        }

    </script>
}
