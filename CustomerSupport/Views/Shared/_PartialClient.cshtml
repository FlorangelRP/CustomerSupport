@using CustomerSupport.Models
@model CustomerSupport.Models.MServiceRequest


<div class="accordion border" id="accordionClient">
    <div class="card collapsed-card">
        <div class="card-header" id="headingClient">
            <h2 class="mb-0">
                <button class="btn btn-link text-decoration-none" type="button" data-toggle="collapse" data-target="#collapseCardClient" aria-expanded="false" aria-controls="collapseClient">
                    Datos del Cliente
                </button>
            </h2>
        </div>

        <div id="collapseCardClient" class="collapse" aria-labelledby="headingClient" data-parent="#accordionClient">

            <div class="card-body">

                <div class="row">
                    <div class="col-md-10">
                        <div class="form-group">
                            <label>Cliente:</label><br>
                            @Html.TextBoxFor(model => model.IdPerson, new { @id = "searchPerson", @name = "IdPerson", @class = "form-control", @placeholder = "Seleccione", @value = "" })
                            @Html.ValidationMessageFor(model => model.IdPerson, "", new { @class = "text-danger" })


                            @*@Html.HiddenFor(model => model.PersonClient.Birthday, new { @value = DateTime.Now, @id = "Birthday" })
                                @Html.HiddenFor(model => model.PersonClient.IdContactType, new { @id = "IdContactType" })
                                @Html.HiddenFor(model => model.PersonClient.IdPosition, new { @id = "IdPosition" })
                                @Html.HiddenFor(model => model.PersonClient.ClientPermission, new { @id = "ClientPermission" })
                                @Html.HiddenFor(model => model.PersonClient.IdPersonType, new { @id = "IdPersonType" })
                                @Html.HiddenFor(model => model.PersonClient.Address, new { @id = "Address" })
                                @Html.HiddenFor(model => model.PersonClient.Email, new { @id = "Email" })
                                @Html.HiddenFor(model => model.PersonClient.IdIdentificationType, new { @id = "IdIdentificationType" })*@
                        </div>
                    </div>
                </div>

                <hr>

                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="control-label font-weight-bold">Tipo de Identificacion:</div>
                            @Html.DisplayFor(model => model.PersonClient.IdentificationType, new { @id = "IdentificationType" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="control-label font-weight-bold">Numero de Identificacion:</div>
                            @Html.DisplayFor(model => model.PersonClient.NumIdentification, new { @id = "NumIdentification" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="control-label font-weight-bold">Nombres:</div>
                            @Html.DisplayFor(model => model.PersonClient.Name, new { @id = "Name" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="control-label font-weight-bold">Apellidos:</div>
                            @Html.DisplayFor(model => model.PersonClient.LastName, new { @id = "LastName" })
                        </div>
                    </div>
                </div>

            </div>

        </div>
    </div>
</div>

@section Scripts {

    <script>

        var ListPersons = [];

        function cargarDataPerson(IdPerson, lstPersons) {
            if (IdPerson === "") { return false; }
            var objPerson = lstPersons.find((m) => m.IdPerson == IdPerson);

            document.getElementById('IdentificationType').innerText = objPerson.IdentificationType;
            document.getElementById('NumIdentification').innerText = objPerson.NumIdentification;
            document.getElementById('Name').innerText = objPerson.Name;
            document.getElementById('LastName').innerText = objPerson.LastName;

            //var fecha = new Date();
            //$("#Birthday").val(fecha.toLocaleDateString("en-US")); //hidden del modelo*/
            //$("#IdContactType").val(1); //hidden del modelo
            //$("#IdPosition").val(objPerson.IdPosition); //hidden del modelo
            //$("#ClientPermission").val(objPerson.ClientPermission); //hidden del modelo
            //$("#IdPersonType").val(objPerson.IdPersonType); //hidden del modelo
            //$("#NumIdentification").val(objPerson.NumIdentification); //hidden del modelo
            //$("#LastName").val(objPerson.LastName); //hidden del modelo
            //$("#Name").val(objPerson.Name); //hidden del modelo
            //$("#Address").val(objPerson.Address); //hidden del modelo
            //$("#Email").val(objPerson.Email); //hidden del modelo
            //$("#IdIdentificationType").val(objPerson.IdIdentificationType); //hidden del modelo
        }

        function ObtenerPersonas() {

            ListPersons = $.ajax({
                        type: "GET",
                        url: '@Url.Action("GetListPerson", "Person")?idPersonType=1',
                        data: "{}",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        global: false,
                        async: false,
                        success: function (data) {
                            var itemArray = {};
                            itemArray.IdPerson = "";
                            itemArray.LastName = "";
                            itemArray.Name = "";
                            data.push(itemArray);
                            data.reverse();
                            return data;
                         }
            }).responseJSON;

        }
        ObtenerPersonas();

        $(document).ready(function () {
            debugger;
            $('#searchPerson').inputpicker({
                data: ListPersons,
                fields: ['Name', 'LastName'],
                fieldText: 'Name',
                fieldValue: 'IdPerson',
                headShow: true,
                filterOpen: true,
                selectMode: null,
                pagination: false,
                responsive: true
            });
            $('#searchPerson').val("");

            $("#searchPerson").on('change', function () {
                var IdPerson = $(this).val();
                cargarDataPerson(IdPerson, ListPersons)
            });

        });

    </script>
}

