@model CustomerSupport.Models.MUser

@{
    ViewBag.Title = "Crear Usuario";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card card-primary">
    <div class="card-header">
        <h3 class="card-title">@ViewBag.Title</h3>
    </div>
    <div class="card-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="m-0 row justify-content-center">
                <div class="form-horizontal col-md-10">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                    <div class="row">
                        <div class="col-md-2">
                            <div class="form-group">
                                <div class="control-label">Codigo:</div>
                                @Html.TextBoxFor(model => model.IdUser, new { @class = "form-control", @disabled = "disabled" })
                                @Html.ValidationMessageFor(model => model.IdUser, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-md-10">
                            <div class="form-group">
                                <div class="control-label">Persona:</div>
                                <input class="form-control" id="LisPerson" value="Seleccione" />
                            </div>
                        </div>
                    </div>


                    <div class="row">

                        <div class="col-md-5">
                            <div class="form-group">
                                <div class="control-label">Login:</div>
                                @Html.TextBoxFor(model => model.Login, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-5">
                            <div class="form-group">
                                <div class="control-label">Clave:</div>
                                @Html.TextBoxFor(model => model.Password, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>

                    @*<div class="row">
                        <div class="col-md-4">
                            <label class="control-label">Estatus:</label>
                             @Html.TextBoxFor(model => model.Status, new { @type = "checkbox", @id = "chkStatus" })
                            <label id="labEstatus"> </label>
                        </div>
                    </div>*@


                    <br />

                    <div class="row">
                        <div class="col-md-10">
                            <div id="demo">
                                <div class="table-responsive">
                                    <div class="container">
                                        <table id="TMenuOptions" class="display table table-bordered table-striped">
                                            <thead>
                                                <tr>
                                                    <th></th>
                                                    <th>
                                                        Opción
                                                    </th>
                                                </tr>
                                            </thead>

                                            @foreach (var item in Model.UserAcces)
                                            {
                                                <tr>
                                                    <td><img src="/Content/assets/images/details_open.png" alt="expand/collapse" rel="@item.IdOption" /></td>
                                                    <td>
                                                        @item.OptionName
                                                    </td>

                                                </tr>
                                            }

                                        </table>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>

                    <br />

                    <div class="row">
                        <div class="col-md-offset-2 col-md-10">
                            <div class="form-group">
                                <div class="text-center">
                                    <a href="location.href='@Url.Action("Create", "Person")';return false;" class="white_btn">Grabar</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Regresar a la Lista", "ListUser")
        </div>


    </div>
</div>
@section Scripts {

    <script src="~/Content/assets/js/jquery.min.js"></script>
    <script src="~/Content/assets/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="~/Content/assets/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/Content/assets/plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
    <script src="~/Content/assets/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
    <script src="~/Content/assets/plugins/datatables-buttons/js/dataTables.buttons.min.js"></script>
    <script src="~/Content/assets/plugins/datatables-buttons/js/buttons.bootstrap4.min.js"></script>
    <script src="~/Content/assets/plugins/datatables-buttons/js/buttons.html5.min.js"></script>
    <script src="~/Content/assets/plugins/datatables-buttons/js/buttons.print.min.js"></script>
    <script src="~/Content/assets/plugins/datatables-buttons/js/buttons.colVis.min.js"></script>
    <script src="~/Content/assets/plugins/datatables-buttons/js/buttons.colVis.min.js"></script>
    <script type="text/javascript">

        var OptionId = 0;


        function toggle(source, valor) {

            var isSelected = $(source).is(":checked");
            
            var option = $(source).attr('rel');

            switch (valor) {
                case 1:
                    checkboxes = document.getElementsByName('itemV' + option + '[]');
                    break;
                case 2:
                    checkboxes = document.getElementsByName('itemC' + option + '[]');
                    break;
                case 3:
                    checkboxes = document.getElementsByName('itemB' + option + '[]');
                    break;
                case 4:
                    checkboxes = document.getElementsByName('itemE' + option + '[]');
                    break;
                case 5:
                    checkboxes = document.getElementsByName('itemD' + option + '[]');
                    break;
            }


            for (let i = 0; i < checkboxes.length; i++) {
                checkboxes[i].checked = isSelected;

            }
           
        }

        $(document).ready(function () {


        // If the checkbox is checked, display the output text
        if ($("#chkStatus").checked == true) {
            $("#labEstatus").text("Activo");
        } else {
            $("#labEstatus").text("Inactivo");
        }

        $("#chkStatus").on('click', function () {

            var IsSelected = $('#chkStatus').is(":checked");

            // If the checkbox is checked, display the output text
            if (IsSelected == true) {
                $("#labEstatus").text("Activo");
            } else {
                $("#labEstatus").text("Inactivo");
            }

        });


        $('#TMenuOptions tbody td img').click(function () {

                if (this.src.match('details_close')) {

                    /* This row is already open - close it */
                    this.src = "/Content/assets/images/details_open.png";
                    var nTr = this.parentNode.parentNode;
                    oTable.fnClose(nTr);
                }
                else {

                    this.src = "/Content/assets/images/details_close.png";
                    OptionId = $(this).attr("rel");
                    var IdUser = $("#IdUser").val();

                    var existe = 0;
                    var params = {
                        IdUser: IdUser,
                        IdAssociated: OptionId
                    };

                    var nTr = this.parentNode.parentNode;
                    var objtable = "<table id='TMenuOptionsDetail" + OptionId + "' class='padre display table table-bordered table - striped' > ";
                    objtable += "<thead> ";
                    objtable += "<tr> ";
                    objtable += "<th>Opcion</th> "; 
                    objtable += "<th> <input type='checkbox' rel='" + OptionId + "' onclick='toggle(this,1)' /> Visible </th> ";
                    objtable += "<th> <input type='checkbox' rel='" + OptionId + "' onclick='toggle(this,2)' /> Crear </th> ";
                    objtable += "<th> <input type='checkbox' rel='" + OptionId + "' onclick='toggle(this,3)' /> Buscar </th> ";
                    objtable += "<th> <input type='checkbox' rel='" + OptionId + "' onclick='toggle(this,4)' /> Editar </th> ";
                    objtable += "<th> <input type='checkbox' rel='" + OptionId + "' onclick='toggle(this,5)' /> Eliminar </th> ";
                    objtable += "</tr> ";
                    objtable += "</thead> ";
                    nro = 0;

                    /* Open this row */

                    $.ajax({
                        type: 'GET',
                        url: '@Url.Action("DetailMenuOption", "User")',
                        data: params,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        dataSrc: '',
                        success: function (data) {

                            $.each(data, function (index, item) {
                                objtable += "<tbody><tr><td>" + item.OptionName + "</td>";

                                nro = nro + 1;
                                if (item.Visible.toString() == "true") {
                                    objtable += "<td><input type=checkbox checked=checked name='itemV" + OptionId + "[]' value='" + nro + "'></td>";
                                }
                                else {
                                    objtable += "<td><input type=checkbox name='itemV" + OptionId + "[]'  value='" + nro + "' ></td>";
                                }

                                nro = nro + 1;

                                if (item.Create.toString() == "true") {
                                    //objtable += "<td><div class='s_status'><span id='labEstatus'></span><input type=checkbox id=chk1 checked=checked name='item[]' value='" + nro +"' ><span class='s_st_checkbox'></span></label></div></td>";
                                    objtable += "<td><input type=checkbox checked=checked name='itemC" + OptionId + "[]' value='" + nro + "'></td>";
                                }
                                else {
                                    objtable += "<td><input type=checkbox name='itemC" + OptionId + "[]' value='" + nro + "' ></td>";
                                    //objtable += "<td><div class='s_status'><span id='labEstatus'></span><input type=checkbox id=chk1 name='item[]' value='" + nro +"'><span class='s_st_checkbox'></span></label></div></td>";
                                }

                                nro = nro + 1;
                                if (item.Search.toString() == "true") {
                                    //objtable += "<td><div class='s_status'><span id='labEstatus'></span><input type=checkbox id=chk1 checked=checked name='item[]' value='" + nro +"'><span class='s_st_checkbox'></span></label></div></td>";
                                    objtable += "<td><input type=checkbox checked=checked name='itemB" + OptionId + "[]' value='" + nro + "'></td>";
                                }
                                else {
                                    //objtable += "<td><div class='s_status'><span id='labEstatus'></span><input type=checkbox id=chk1 name='item[]' value='" + nro +"'><span class='s_st_checkbox'></span></label></div></td>";
                                    objtable += "<td><input type=checkbox name='itemB" + OptionId + "[]' value='" + nro + "' ></td>";
                                }

                                nro = nro + 1;

                                if (item.Edit.toString() == "true") {
                                   // objtable += "<td><div class='s_status'><span id='labEstatus'></span><input type=checkbox id=chk1 checked=checked name='item[]' value='" + nro +"'><span class='s_st_checkbox'></span></label></div></td>";
                                    objtable += "<td><input type=checkbox checked=checked name='itemE" + OptionId + "[]'  value='" + nro + "'></td>";
                                }
                                else {
                                    //objtable += "<td><div class='s_status'><span id='labEstatus'></span><input type=checkbox id=chk1 name='item[]' value='" + nro +"'><span class='s_st_checkbox'></span></label></div></td>";
                                    objtable += "<td><input type=checkbox name='itemE" + OptionId + "[]'  value='" + nro + "' ></td>";
                                }

                                nro = nro + 1;

                                if (item.Delete.toString() == "true") {
                                    //objtable += "<td><div class='s_status'><span id='labEstatus'></span><input type=checkbox id=chk1 checked=checked name='item[]' value='" + nro +"' ><span class='s_st_checkbox'></span></label></div></td>";
                                    objtable += "<td><input type=checkbox checked=checked name='itemD" + OptionId + "[]'  value='" + nro + "'></td>";
                                }
                                else {
                                   // objtable += "<td><div class='s_status'><span id='labEstatus'></span><input type=checkbox id=chk1 name='item[]' value='" + nro +"'><span class='s_st_checkbox'></span></label></div></td>";
                                    objtable += "<td><input type=checkbox name='itemD" + OptionId + "[]'  value='" + nro + "' ></td>";
                                }

                                existe = 1;
                            });

                            if (existe == 1)
                                objtable += "</tbody></table>";
                            else
                                objtable = "";

                            oTable.fnOpen(nTr, objtable, 'details');

                           

                        }
                    });
                }
            });


        /* Initialize table and make first column non-sortable*/
        oTable = $('#TMenuOptions').dataTable({
            "bJQueryUI": true,
            "Columns": [{ "bSortable": false, "bSearchable": false,"Width":"5%" },
                null
            ],
            "bAutoWidth": false,
            "bInfo": false,
            "language": {
                "sProcessing": "Procesando...",
                "sLengthMenu": "Mostrar _MENU_ registros",
                "sZeroRecords": "No se encontraron resultados",
                "sEmptyTable": "No existen Registros",
                "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                "sInfoPostFix": "",
                "sSearch": "Buscar:",
                "sUrl": "",
                "sInfoThousands": ",",
                "sLoadingRecords": "Cargando...",
                "oPaginate": {
                    "sFirst": "Primero",
                    "sLast": "Último",
                    "sNext": "Siguiente",
                    "sPrevious": "Anterior"
                },
                "oAria": {
                    "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                    "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                }
            }
        });

        });
    </script>
}
